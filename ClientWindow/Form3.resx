<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICYAAAEAIADAEwAAFgAAACgAAAAgAAAATAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADIAAACCAAAAXQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcgAAALoAAADQAAAAIwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABNAAAAVwAA
        AK4AAAAbAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AG0AAAA7AAAASgAAABoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAABTAAAAhgAAAJMAAACTAAAAJwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAGwAAAHoAAACPAAAA3wAAAOMAAABkAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAB3AAAAswAAANYAAADIAAAA6wAAAJoAAAAlAAAADAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPAAAADIAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAARQAAAJcAAAClAAAA1AAAAI0AAAC0AAAA4wAAAF4AAAAsAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD8AAABQAAAAEQAAAAAAAAAAAAAAAAAAAFYAAADfAAAA5wAA
        AIcAAABIAAAASgAAAE8AAABTAAAAVgAAAHkAAAC7AAAAyAAAAMcAAACNAgICbQAAAHgAAACWAAAAdQAA
        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
        AAAAAAAAAAAAAAAAAAAAAAAkAAAAJwAAAFIAAABBAAAAHQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAApAAAALgAAAEoAAAAMAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAIIAAAC/AAAA1wAAACAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPQAAAGoAAACbAAAAEgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAADQAA
        ABwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA////////////////////////f////z////+//////////j////4////8H///+B//4/Df8/AA
        H/PwAAQf+AAAH/wAAD/8AAA//gAAf/4AAH/+AAB//gAAf/4AAH/8AAAf+AAAP/iAAB/gEAQb4B4Pcf//
        n////B////4/////P//////////////+P////7////////////8=
</value>
  </data>
</root>